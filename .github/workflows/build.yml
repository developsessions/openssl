name: Build

on: 
  workflow_dispatch:
  push:
  schedule:
    - cron: 5 5 * * 0

jobs:
  build-openssl:
    strategy:
      matrix:
        mingw: [ 
          { platform: x86, bit: 32, compile: i686-w64-mingw32-, mingw: mingw }, 
          { platform: x64, bit: 64, compile: x86_64-w64-mingw32-, mingw: mingw64 }
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: ${{ matrix.mingw.platform }}
      - name: Build
        run: |
          wget https://github.com/openssl/openssl/releases/download/OpenSSL_1_1_1t/openssl-1.1.1t.tar.gz
          tar xzf openssl-1.1.1t.tar.gz
          cd openssl-1.1.1t
          ./Configure ${{ matrix.mingw.mingw }} no-shared no-pinshared no-dynamic-engine no-capieng no-async --cross-compile-prefix=${{ matrix.mingw.compile }} --prefix=$GITHUB_WORKSPACE/build
          make -j 13
          make install_dev
          cd ../build
          tar czf openssl-mingw${{ matrix.mingw.bit }}.tar.gz lib
      - uses: actions/upload-artifact@v3
        with:
          name: openssl-mingw${{ matrix.mingw.bit }}
          path: build/openssl-mingw${{ matrix.mingw.bit }}.tar.gz

  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [build-openssl]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: openssl-mingw32
          path: release
      - uses: actions/download-artifact@v3
        with:
          name: openssl-mingw64
          path: release
      - uses: ncipollo/release-action@v1
        with:
          name: "openssl-1.1.1t"
          artifacts: "release/*"
          artifactErrorsFailBuild: true
          allowUpdates: true
          commit: master
          tag: openssl-1.1.1t